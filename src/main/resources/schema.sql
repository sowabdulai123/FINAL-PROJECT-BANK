-- public.account definition

-- Drop table if exists

-- DROP TABLE IF EXISTS public.account;
DROP TABLE IF EXISTS public.account;

--DROP SEQUENCE IF EXISTS public.account_number_seq;

--CREATE SEQUENCE public.account_number_seq
--	INCREMENT BY 1
--	MINVALUE 100000
--	MAXVALUE 9223372036854775807
--	START 100000
--	CACHE 1
--	NO CYCLE;

CREATE TABLE public.account (
	"number" int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 100000 MAXVALUE 9223372036854775807 START 100000 CACHE 1 NO CYCLE) NOT NULL,
	balance float8 NOT NULL,
	"name" varchar(255) NULL,
	--"number" bigint DEFAULT nextval('account_number_seq') NOT NULL,
	opening_balance float8 NOT NULL,
	sort_code int4  DEFAULT 7265 NOT NULL,
	customer_id int8 NOT NULL,
	CONSTRAINT account_pkey PRIMARY KEY ("number")
	--CONSTRAINT account_unique UNIQUE (number)
);

-- public.account foreign keys

--ALTER TABLE public.account ADD CONSTRAINT fknnwpo0lfq4xai1rs6887sx02k FOREIGN KEY (customer_id) REFERENCES public.customer(id);




-- public.customer definition

-- Drop table if exists

DROP TABLE IF EXISTS public.customer;

CREATE TABLE public.customer (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	full_name varchar(40) NULL,
	CONSTRAINT customer_pkey PRIMARY KEY (id)
);






-- public.transaction_record definition

-- Drop table if exists

DROP TABLE IF EXISTS public.transaction_record;

CREATE TABLE public.transaction_record (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"type" int2 NULL,
	amount float8 NOT NULL,
	local_date_time timestamp(6) NULL,
	"number" int8 NOT NULL,
	"to_account_number" int8 NULL,
	CONSTRAINT transaction_record_pkey PRIMARY KEY (id),
	CONSTRAINT transaction_record_type_check CHECK (((type >= 0) AND (type <= 2)))
);

-- public.transaction_record foreign keys

--ALTER TABLE public.transaction_record ADD CONSTRAINT fkfym44qjx8fuboecktw3xli6hs FOREIGN KEY ("number") REFERENCES public.account(id);